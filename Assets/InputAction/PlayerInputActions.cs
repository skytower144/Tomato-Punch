//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.1.0
//     from Assets/InputAction/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""99cecb93-a79b-4afe-bd70-4264e7d3aa51"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""e8e08132-7317-4abb-858d-05ce847e3327"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""ce0f69aa-5d03-45ec-9181-5dde22865e59"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""1a3e3f0c-5f3c-4ec7-80c8-4ad420015169"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Status"",
                    ""type"": ""Button"",
                    ""id"": ""fcccaec4-3996-4b1a-a816-90a71579a9df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""LeftPage"",
                    ""type"": ""Button"",
                    ""id"": ""87dd0201-0547-4fd0-b512-d89b94b46f4e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""RightPage"",
                    ""type"": ""Button"",
                    ""id"": ""9e7c7480-8959-4f9b-b761-b99e28f05eb7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""dcbdc9ce-bace-4fea-b361-0dd805746ac4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""00ca640b-d935-4593-8157-c05846ea39b3"",
                    ""path"": ""Dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e2062cb9-1b15-46a2-838c-2f8d72a0bdd9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d2581a9b-1d11-4566-b27d-b92aff5fabbc"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""320bffee-a40b-4347-ac70-c210eb8bc73a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fcfe95b8-67b9-4526-84b5-5d0bc98d6400"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""DPad"",
                    ""id"": ""20c7cbe1-4c6e-4860-b3c2-547d18c20f9c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f846b627-6be4-4e98-bf26-9d1250542347"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""227d6fd1-da04-46f4-8181-4739d44c02af"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5fc8ae21-0d4f-4500-9ccf-fa6fe8572a2c"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2fd7102f-665d-49f6-bc05-105225bd4309"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""456e0591-b90f-4d30-bf27-675ec69fb139"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd40321f-9e70-4a40-89bc-b9d37cbd0d50"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aedb2da5-d5a6-4645-a3ed-a5f6a1b69730"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Status"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef443f3f-dcb9-4406-b362-c25cd0c9fa10"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Status"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed834fdb-1d2f-48cf-b3f3-be0459114dd7"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7836cda-cd3c-48ea-aaee-ec43a847803d"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ad432d9-7f4d-43ef-b6d8-f80f3505bc4b"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""RightPage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""edef3910-f3d8-48a9-b36f-413c95d34178"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightPage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e57be51a-42e0-472e-b4fe-d049a967c489"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0caa2226-aae4-4629-9d26-ccdfb29665a8"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa3c05de-85af-4946-936e-48b6343a4c04"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""LeftPage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d3695f1-1f5b-4f38-b834-dca3c5270023"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LeftPage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Battle"",
            ""id"": ""5f6b4b2d-daac-4dce-830d-0bd660a5ce11"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""2f19e870-73df-4b11-b8f0-05888d8fb125"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Guard"",
                    ""type"": ""Button"",
                    ""id"": ""668f4197-084d-4ff9-abde-9e6807a7d4ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""LeftEvade"",
                    ""type"": ""Button"",
                    ""id"": ""5ba1fc1d-9f70-486f-b287-adc7eb6f00d8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""RightEvade"",
                    ""type"": ""Button"",
                    ""id"": ""dd72c917-1f7a-45ce-a5a3-b0ca76f448f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""LeftPunch"",
                    ""type"": ""Button"",
                    ""id"": ""5074837d-76a5-43a9-b756-38cb1337a80f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""RightPunch"",
                    ""type"": ""Button"",
                    ""id"": ""39700f19-7fd2-4486-b35a-e423461d675b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""FirstEquip"",
                    ""type"": ""Button"",
                    ""id"": ""068dc64c-3d2b-4ac1-9c28-06a198b8ed9a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""SecondEquip"",
                    ""type"": ""Button"",
                    ""id"": ""aa01755f-352b-4dba-b172-c36ce2bfa9ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""SuperSkill"",
                    ""type"": ""Button"",
                    ""id"": ""88084549-ab2d-4422-bb08-ddb8c16e7217"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Esc"",
                    ""type"": ""Button"",
                    ""id"": ""85233ce4-59f9-476d-9724-e0df175a9f74"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""56e8a293-438e-40ea-8ce7-f68a74e3af24"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e13f933-06eb-4a94-82b6-9d0aef25b07d"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84be4c3b-ab8a-4906-9625-14a31773b76f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Guard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""121ff21f-1132-401a-a8e8-cd228a1bec33"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Guard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49bda800-1179-493e-8799-5a5d167d518f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""LeftEvade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3082a08d-cbf6-4ec9-b90c-f64e31f2e698"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LeftEvade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a0b5643-e648-4a62-934c-ed9e3abb57b6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""RightEvade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""afc6fbbf-3830-424d-bead-482f0d4c63ad"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightEvade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cfda4ae2-1e98-48d3-9987-c79cbe014851"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""LeftPunch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be71c34b-8d15-4ade-a8eb-3021a5e7da1a"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LeftPunch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2548dcf-f104-4094-83af-ddadf36c4846"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""RightPunch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d325945c-0573-4888-ab95-e4875b4322ba"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightPunch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7dcbdd35-eebe-4029-b664-ec7fe3dfbf30"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""FirstEquip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b493f68-d457-4434-8526-f493ac4affb8"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""FirstEquip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31d27d8d-54f8-477a-af47-278e1e603594"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SecondEquip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23cb3061-1039-4b74-8bc1-1e86d206e8fe"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SecondEquip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1522521-db86-44cb-bc1b-40147ebc9214"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SuperSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e512363e-6900-45ba-a3e2-c91f56597e80"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SuperSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f964322e-586a-4479-9b90-6799f05c3af2"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Esc"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""243d7c0a-7534-4458-8620-ead19edd7464"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Esc"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""83e1c5b9-50c0-4abc-9dd9-359dc71195a9"",
            ""actions"": [],
            ""bindings"": []
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        m_Player_Cancel = m_Player.FindAction("Cancel", throwIfNotFound: true);
        m_Player_Status = m_Player.FindAction("Status", throwIfNotFound: true);
        m_Player_LeftPage = m_Player.FindAction("LeftPage", throwIfNotFound: true);
        m_Player_RightPage = m_Player.FindAction("RightPage", throwIfNotFound: true);
        m_Player_Pause = m_Player.FindAction("Pause", throwIfNotFound: true);
        // Battle
        m_Battle = asset.FindActionMap("Battle", throwIfNotFound: true);
        m_Battle_Jump = m_Battle.FindAction("Jump", throwIfNotFound: true);
        m_Battle_Guard = m_Battle.FindAction("Guard", throwIfNotFound: true);
        m_Battle_LeftEvade = m_Battle.FindAction("LeftEvade", throwIfNotFound: true);
        m_Battle_RightEvade = m_Battle.FindAction("RightEvade", throwIfNotFound: true);
        m_Battle_LeftPunch = m_Battle.FindAction("LeftPunch", throwIfNotFound: true);
        m_Battle_RightPunch = m_Battle.FindAction("RightPunch", throwIfNotFound: true);
        m_Battle_FirstEquip = m_Battle.FindAction("FirstEquip", throwIfNotFound: true);
        m_Battle_SecondEquip = m_Battle.FindAction("SecondEquip", throwIfNotFound: true);
        m_Battle_SuperSkill = m_Battle.FindAction("SuperSkill", throwIfNotFound: true);
        m_Battle_Esc = m_Battle.FindAction("Esc", throwIfNotFound: true);
        // Menu
        m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Interact;
    private readonly InputAction m_Player_Cancel;
    private readonly InputAction m_Player_Status;
    private readonly InputAction m_Player_LeftPage;
    private readonly InputAction m_Player_RightPage;
    private readonly InputAction m_Player_Pause;
    public struct PlayerActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputAction @Cancel => m_Wrapper.m_Player_Cancel;
        public InputAction @Status => m_Wrapper.m_Player_Status;
        public InputAction @LeftPage => m_Wrapper.m_Player_LeftPage;
        public InputAction @RightPage => m_Wrapper.m_Player_RightPage;
        public InputAction @Pause => m_Wrapper.m_Player_Pause;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Interact.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Cancel.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCancel;
                @Status.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStatus;
                @Status.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStatus;
                @Status.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStatus;
                @LeftPage.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftPage;
                @LeftPage.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftPage;
                @LeftPage.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeftPage;
                @RightPage.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightPage;
                @RightPage.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightPage;
                @RightPage.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRightPage;
                @Pause.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPause;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Status.started += instance.OnStatus;
                @Status.performed += instance.OnStatus;
                @Status.canceled += instance.OnStatus;
                @LeftPage.started += instance.OnLeftPage;
                @LeftPage.performed += instance.OnLeftPage;
                @LeftPage.canceled += instance.OnLeftPage;
                @RightPage.started += instance.OnRightPage;
                @RightPage.performed += instance.OnRightPage;
                @RightPage.canceled += instance.OnRightPage;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Battle
    private readonly InputActionMap m_Battle;
    private IBattleActions m_BattleActionsCallbackInterface;
    private readonly InputAction m_Battle_Jump;
    private readonly InputAction m_Battle_Guard;
    private readonly InputAction m_Battle_LeftEvade;
    private readonly InputAction m_Battle_RightEvade;
    private readonly InputAction m_Battle_LeftPunch;
    private readonly InputAction m_Battle_RightPunch;
    private readonly InputAction m_Battle_FirstEquip;
    private readonly InputAction m_Battle_SecondEquip;
    private readonly InputAction m_Battle_SuperSkill;
    private readonly InputAction m_Battle_Esc;
    public struct BattleActions
    {
        private @PlayerInputActions m_Wrapper;
        public BattleActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_Battle_Jump;
        public InputAction @Guard => m_Wrapper.m_Battle_Guard;
        public InputAction @LeftEvade => m_Wrapper.m_Battle_LeftEvade;
        public InputAction @RightEvade => m_Wrapper.m_Battle_RightEvade;
        public InputAction @LeftPunch => m_Wrapper.m_Battle_LeftPunch;
        public InputAction @RightPunch => m_Wrapper.m_Battle_RightPunch;
        public InputAction @FirstEquip => m_Wrapper.m_Battle_FirstEquip;
        public InputAction @SecondEquip => m_Wrapper.m_Battle_SecondEquip;
        public InputAction @SuperSkill => m_Wrapper.m_Battle_SuperSkill;
        public InputAction @Esc => m_Wrapper.m_Battle_Esc;
        public InputActionMap Get() { return m_Wrapper.m_Battle; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BattleActions set) { return set.Get(); }
        public void SetCallbacks(IBattleActions instance)
        {
            if (m_Wrapper.m_BattleActionsCallbackInterface != null)
            {
                @Jump.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnJump;
                @Guard.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnGuard;
                @Guard.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnGuard;
                @Guard.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnGuard;
                @LeftEvade.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnLeftEvade;
                @LeftEvade.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnLeftEvade;
                @LeftEvade.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnLeftEvade;
                @RightEvade.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnRightEvade;
                @RightEvade.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnRightEvade;
                @RightEvade.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnRightEvade;
                @LeftPunch.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnLeftPunch;
                @LeftPunch.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnLeftPunch;
                @LeftPunch.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnLeftPunch;
                @RightPunch.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnRightPunch;
                @RightPunch.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnRightPunch;
                @RightPunch.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnRightPunch;
                @FirstEquip.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnFirstEquip;
                @FirstEquip.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnFirstEquip;
                @FirstEquip.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnFirstEquip;
                @SecondEquip.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnSecondEquip;
                @SecondEquip.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnSecondEquip;
                @SecondEquip.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnSecondEquip;
                @SuperSkill.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnSuperSkill;
                @SuperSkill.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnSuperSkill;
                @SuperSkill.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnSuperSkill;
                @Esc.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnEsc;
                @Esc.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnEsc;
                @Esc.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnEsc;
            }
            m_Wrapper.m_BattleActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Guard.started += instance.OnGuard;
                @Guard.performed += instance.OnGuard;
                @Guard.canceled += instance.OnGuard;
                @LeftEvade.started += instance.OnLeftEvade;
                @LeftEvade.performed += instance.OnLeftEvade;
                @LeftEvade.canceled += instance.OnLeftEvade;
                @RightEvade.started += instance.OnRightEvade;
                @RightEvade.performed += instance.OnRightEvade;
                @RightEvade.canceled += instance.OnRightEvade;
                @LeftPunch.started += instance.OnLeftPunch;
                @LeftPunch.performed += instance.OnLeftPunch;
                @LeftPunch.canceled += instance.OnLeftPunch;
                @RightPunch.started += instance.OnRightPunch;
                @RightPunch.performed += instance.OnRightPunch;
                @RightPunch.canceled += instance.OnRightPunch;
                @FirstEquip.started += instance.OnFirstEquip;
                @FirstEquip.performed += instance.OnFirstEquip;
                @FirstEquip.canceled += instance.OnFirstEquip;
                @SecondEquip.started += instance.OnSecondEquip;
                @SecondEquip.performed += instance.OnSecondEquip;
                @SecondEquip.canceled += instance.OnSecondEquip;
                @SuperSkill.started += instance.OnSuperSkill;
                @SuperSkill.performed += instance.OnSuperSkill;
                @SuperSkill.canceled += instance.OnSuperSkill;
                @Esc.started += instance.OnEsc;
                @Esc.performed += instance.OnEsc;
                @Esc.canceled += instance.OnEsc;
            }
        }
    }
    public BattleActions @Battle => new BattleActions(this);

    // Menu
    private readonly InputActionMap m_Menu;
    private IMenuActions m_MenuActionsCallbackInterface;
    public struct MenuActions
    {
        private @PlayerInputActions m_Wrapper;
        public MenuActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputActionMap Get() { return m_Wrapper.m_Menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        public void SetCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterface != null)
            {
            }
            m_Wrapper.m_MenuActionsCallbackInterface = instance;
            if (instance != null)
            {
            }
        }
    }
    public MenuActions @Menu => new MenuActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_TouchSchemeIndex = -1;
    public InputControlScheme TouchScheme
    {
        get
        {
            if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
            return asset.controlSchemes[m_TouchSchemeIndex];
        }
    }
    private int m_JoystickSchemeIndex = -1;
    public InputControlScheme JoystickScheme
    {
        get
        {
            if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
            return asset.controlSchemes[m_JoystickSchemeIndex];
        }
    }
    private int m_XRSchemeIndex = -1;
    public InputControlScheme XRScheme
    {
        get
        {
            if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
            return asset.controlSchemes[m_XRSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnStatus(InputAction.CallbackContext context);
        void OnLeftPage(InputAction.CallbackContext context);
        void OnRightPage(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
    public interface IBattleActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnGuard(InputAction.CallbackContext context);
        void OnLeftEvade(InputAction.CallbackContext context);
        void OnRightEvade(InputAction.CallbackContext context);
        void OnLeftPunch(InputAction.CallbackContext context);
        void OnRightPunch(InputAction.CallbackContext context);
        void OnFirstEquip(InputAction.CallbackContext context);
        void OnSecondEquip(InputAction.CallbackContext context);
        void OnSuperSkill(InputAction.CallbackContext context);
        void OnEsc(InputAction.CallbackContext context);
    }
    public interface IMenuActions
    {
    }
}
